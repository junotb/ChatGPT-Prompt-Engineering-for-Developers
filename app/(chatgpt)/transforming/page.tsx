const Transforming = () => {
  return (
    <div className="flex items-center justify-center w-full h-full p-6">
      <div className="w-full h-full pr-2 overflow-y-scroll">
        대형 언어 모델은 입력을 다른 형식으로 변환하는 데 매우 능숙합니다.<br />
        예를 들어, 한 언어로 된 텍스트를 입력하고 다른 언어로 변환하거나 번역하는 것이나 맞춤법 및 문법 수정을 도와주는 것입니다.<br />
        그래서 문법적으로 완벽하지 않은 텍스트를 입력으로 받아 조금 수정하는 데 도움을 주거나 HTML을 입력하고 JSON을 출력하는 등의 형식 변환도 가능합니다.<br />
        따라서 대형 언어 모델과 몇 가지 프롬프트를 사용하면 이제 표현식으로 귀찮게 작성해야 했던 여러 응용 프로그램을 훨씬 간단하게 구현할 수 있습니다.<br />
        저는 요즘 거의 모든 글을 교정하기 위해 ChatGPT를 사용하고 있으므로 이제 노트북에서 몇 가지 더 예시를 보여드릴 것을 기대합니다.<br />
        먼저 OpenAI를 가져오고 이 비디오 전체에서 계속 사용해온 get_completion 도우미 함수를 사용하겠습니다.<br />
        그리고 첫 번째로 번역 작업을 수행할 것입니다.<br />
        대형 언어 모델은 다양한 소스에서 가져온 많은 텍스트로 훈련되는데, 이는 물론 여러 다른 언어로 이루어져 있습니다.<br />
        이로 인해 모델은 번역을 수행할 수 있는 능력을 갖추게 됩니다.<br />
        이러한 모델은 다양한 수준의 능숙도로 수백 개의 언어를 알고 있습니다.<br />
        따라서 이 능력을 활용하는 방법에 대해 몇 가지 예시를 살펴보겠습니다.<br /><br />
        간단한 것으로 시작해보죠.<br />
        첫 번째 예시에서는 영어 텍스트를 스페인어로 번역해주세요.<br />
        &quot;안녕하세요, 믹서기를 주문하고 싶습니다&quot;라는 문장을 번역하면 &quot;Hola, me gustaría ordenar una licuadora&quot;입니다.<br />
        스페인어를 배운 적이 없어서 정말 죄송합니다.<br />
        분명히 알 수 있을 것 같네요.<br />
        다른 예시를 해보겠습니다.<br />
        이 예시에서는 &quot;이 언어가 어떤 언어인지 말해주세요&quot;라는 문장입니다.<br />
        그리고 이 문장은 프랑스어로 &quot;Combien coûte le lampadaire&quot;입니다.<br />
        이를 실행해보면 모델이 &quot;이것은 프랑스어입니다&quot;라고 판단합니다.<br />
        모델은 여러 개의 번역도 동시에 수행할 수 있습니다.<br />
        이 예시에서는 다음 텍스트를 프랑스어와 스페인어로 번역해주세요.<br />
        그리고 뭐야, 영어 해적도 추가해볼까요.<br />
        텍스트는 &quot;농구공을 주문하고 싶어요&quot;입니다.<br />
        이렇게 프랑스어, 스페인어, 그리고 영어 해적이 있습니다.<br />
        언어에 따라 번역이 달라질 수 있는데, 이를 언어 모델에게 설명할 수도 있습니다.<br />
        그러면 모델이 그에 맞게 번역할 수 있습니다.<br />
        이 예시에서는 &quot;다음 텍스트를 스페인어로 형식과 비형식으로 번역해주세요&quot;라고 말합니다.<br />
        &quot;베개를 주문하시겠어요?&quot;라는 문장입니다.<br />
        또한 여기서는 이 백틱과는 다른 구분자를 사용하고 있습니다.<br />
        명확한 구분이 있으면 어떤 구분자를 사용하든 상관없습니다.<br />
        여기에는 형식과 비형식이 있습니다.<br />
        형식은 어떤 사람에게 말할 때 사용하는 격식을 말하며, 상급자에게 말하거나 전문적인 상황에서 사용합니다.<br />
        비형식은 친구들에게 말할 때 사용하는 비격식을 말합니다.<br />
        저는 실제로 스페인어를 할 줄은 모르지만, 제 아빠는 할 줄 알아서 이게 맞다고 합니다.<br />
        다음 예시에서는 다국적 전자상거래 회사를 담당하는 척하고 있습니다.<br />
        그래서 사용자 메시지는 다양한 언어로 이루어져 있고, 사용자들은 다양한 언어로 IT 문제에 대해 알려줄 것입니다.<br />
        그래서 우리는 범용 번역기가 필요합니다.<br />
        먼저 다양한 언어로 구성된 사용자 메시지 목록을 붙여넣겠습니다.<br /><br />
        이제 각각의 사용자 메시지를 반복하면서 처리해보겠습니다.<br />
        &quot;for issue in user_messages&quot;입니다.<br />
        그리고 약간 긴 코드 블록을 복사해올 것입니다.<br />
        먼저 모델에게 이 문제가 어떤 언어인지 알려달라고 요청할 것입니다.<br />
        여기가 요청입니다.<br />
        그런 다음 원래 메시지의 언어와 문제를 출력하고, 모델에게 영어와 한국어로 번역해달라고 요청할 것입니다.<br />
        이를 실행해보죠.<br />
        원래 메시지는 프랑스어입니다.<br />
        다양한 언어가 있고, 모델이 이를 영어와 한국어로 번역합니다.<br />
        여기서 모델이 &quot;이것은 프랑스어입니다&quot;라고 말합니다.<br />
        이는 이 요청의 응답이 &quot;이것은 프랑스어입니다&quot;라는 것 때문입니다.<br />
        이 요청을 &quot;이 언어가 무엇인지 말해주세요&quot;라고 수정하면, 한 단어로 응답하거나 문장을 사용하지 않도록 할 수 있습니다.<br />
        JSON 형식으로 요청하거나 다른 방식으로 요청할 수도 있습니다.<br />
        이는 문장을 사용하지 않도록 유도할 가능성이 있습니다.<br /><br />
        그래서 놀랍게도, 당신은 방금 범용 번역기를 만들었습니다.<br />
        그리고 비디오를 일시 정지하고 다른 언어를 추가해보세요.<br />
        아마도 당신이 구사하는 언어를 사용하여 모델의 성능을 확인해 볼 수 있습니다.<br />
        다음으로 우리가 다룰 주제는 어조 변환입니다.<br />
        글쓰기는 의도한 대상 독자에 따라 다양할 수 있습니다.<br />
        이메일을 동료나 교수에게 보낼 때의 글쓰기 방식은 내 남동생에게 문자를 보낼 때와는 달라야 합니다.<br />
        그래서 ChatGPT는 실제로 다른 어조를 생성하는 데도 도움이 될 수 있습니다.<br />
        몇 가지 예시를 살펴보겠습니다.<br />
        첫 번째 예시에서 프롬프트는 &quot;비즈니스 편지로 다음을 번역하세요&quot;입니다.<br />
        &quot;친구야, 여기 스탠딩 램프에 대한 사양을 확인해봐.&quot; 이를 실행해 보면, 우리는 사양서를 포함한 훨씬 더 공식적인 비즈니스 편지를 얻을 수 있습니다.<br />
        다음으로 우리는 다른 형식으로 변환하는 작업을 할 것입니다.<br />
        ChatGPT는 JSON에서 HTML, XML 등 다양한 형식으로 번역하는 데 아주 능숙합니다.<br />
        프롬프트에서 입력 및 출력 형식을 설명할 것입니다.<br />
        예를 들어, 우리는 이름과 이메일이 포함된 레스토랑 직원 목록을 담은 JSON을 HTML로 번역하도록 모델에 요청할 것입니다.<br />
        그리고 우리는 모델의 응답을 받아 출력할 것입니다.<br />
        이렇게 하면 모든 직원의 이름과 이메일이 표시된 HTML을 얻을 수 있습니다.<br />
        다음 변환 작업은 맞춤법 및 문법 검사입니다.<br />
        이는 ChatGPT의 인기있는 사용 사례 중 하나입니다.<br />
        특히 모국어가 아닌 언어로 작업할 때 특히 유용합니다.<br />
        몇 가지 일반적인 문법 및 맞춤법 문제와 언어 모델이 이를 어떻게 해결하는지에 대한 예시가 있습니다.<br />
        문법 또는 맞춤법 오류가 있는 문장 목록을 붙여넣고 각 문장을 모델에게 교정해 달라고 요청할 것입니다.<br />
        그리고 응답을 받아 출력할 것입니다.<br />
        모델은 이 모든 문법 오류를 수정할 수 있습니다.<br />
        이전에 논의한 기법을 사용하여 프롬프트를 개선할 수 있습니다.<br />
        예를 들어, 다음 텍스트를 교정하고 수정하라고 요청할 수 있습니다.<br />
        수정된 버전을 다시 작성하세요.<br />
        오류가 없다면 &quot;오류 없음&quot;이라고 말하세요.<br />
        이렇게 하면 조금의 반복적인 프롬프트 개발을 통해 신뢰성 있는 프롬프트를 매번 더 잘 작동하는 방식으로 찾을 수 있을 것입니다.<br />
        이제 다른 예시를 살펴보겠습니다.<br />
        공개 포럼에 게시하기 전에 텍스트를 확인하는 것은 항상 유용합니다.<br />
        따라서 리뷰를 확인하는 예시를 살펴보겠습니다.<br />
        여기에는 푸짐한 판다에 대한 리뷰가 있습니다.<br />
        모델에게 리뷰를 교정하고 수정해 달라고 요청할 것입니다.<br /><br />
        좋아요.<br />
        우리는 이 수정된 버전을 가지고 있습니다.<br />
        그리고 우리가 할 수 있는 멋진 점은 원래 리뷰와 모델의 출력 간의 차이를 찾을 수 있다는 것입니다.<br />
        그래서 우리는 이 redlines Python 패키지를 사용하여 이 작업을 할 것입니다.<br />
        그리고 우리는 리뷰의 원래 텍스트와 모델의 출력 간의 차이를 얻고 이를 표시할 것입니다.<br />
        그래서 여기에서 원래 리뷰와 모델의 출력 간의 차이와 수정된 내용을 볼 수 있습니다.<br />
        우리가 사용한 프롬프트는 &quot;이 리뷰를 교정하고 수정하세요&quot;였습니다.<br />
        하지만 당신은 톤이나 다른 변화를 주는 등 더 강렬한 변경도 할 수 있습니다.<br />
        그래서 한 가지 더 해보죠.<br />
        이 프롬프트에서는 모델에게 이 동일한 리뷰를 교정하고 수정하되, 더 매력적으로 만들고 APA 스타일을 따르며 고급 독자를 대상으로 하는 것을 요청할 것입니다.<br />
        그리고 출력을 마크다운 형식으로 요청할 것입니다.<br />
        그래서 우리는 원래 리뷰에서 동일한 텍스트를 사용하고 있습니다.<br />
        그럼 실행해보겠습니다.<br />
        그리고 여기에는 softpanda에 대한 확장된 APA 스타일 리뷰가 있습니다.<br />
        이것으로 비디오 변환에 대한 내용은 여기까지입니다.<br />
        다음은 &quot;확장&quot;입니다.<br />
        여기서는 더 짧은 프롬프트를 사용하여 언어 모델에서 더 긴, 자유로운 응답을 생성할 것입니다.
      </div>
    </div>
  )
}

export default Transforming;